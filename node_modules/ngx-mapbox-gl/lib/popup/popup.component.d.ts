import { AfterViewInit, ElementRef, EventEmitter, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';
import { LngLatLike, PointLike, Popup, PopupOptions } from 'mapbox-gl';
import { MapService } from '../map/map.service';
import { MarkerComponent } from '../marker/marker.component';
import * as ɵngcc0 from '@angular/core';
export declare class PopupComponent implements OnChanges, OnDestroy, AfterViewInit, OnInit {
    private MapService;
    closeButton?: PopupOptions['closeButton'];
    closeOnClick?: PopupOptions['closeOnClick'];
    anchor?: PopupOptions['anchor'];
    className?: PopupOptions['className'];
    maxWidth?: PopupOptions['maxWidth'];
    feature?: GeoJSON.Feature<GeoJSON.Point>;
    lngLat?: LngLatLike;
    marker?: MarkerComponent;
    offset?: number | PointLike | {
        [anchor: string]: [number, number];
    };
    popupClose: EventEmitter<void>;
    popupOpen: EventEmitter<void>;
    /**
     * @deprecated Use popupClose instead
     */
    close: EventEmitter<void>;
    /**
     * @deprecated Use popupOpen instead
     */
    open: EventEmitter<void>;
    content: ElementRef;
    popupInstance?: Popup;
    constructor(MapService: MapService);
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    private createPopup;
    private addPopup;
    private warnDeprecatedOutputs;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<PopupComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<PopupComponent, "mgl-popup", never, { "closeButton": "closeButton"; "closeOnClick": "closeOnClick"; "anchor": "anchor"; "className": "className"; "maxWidth": "maxWidth"; "feature": "feature"; "lngLat": "lngLat"; "marker": "marker"; "offset": "offset"; }, { "popupClose": "popupClose"; "popupOpen": "popupOpen"; "close": "close"; "open": "open"; }, never, ["*"]>;
}

//# sourceMappingURL=popup.component.d.ts.map